---
# tasks file for mysql_cluster

- name: Stop mysql service
  service:
    name: mysql
    state: stopped

- name: Copy configuration template
  template:
    src: "mysqld.cnf.j2"
    dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    backup: yes

- name: Start mysql service
  service:
    name: mysql
    state: started

- name: Create mySQL Slave User
  mysql_user:
    name: "{{ MYSQL_SLAVE_USER }}"
    host: "%"
    password: "{{ MYSQL_SLAVE_PASSWORD }}"
    priv: "*.*:REPLICATION SLAVE"

- name: Dump all databases to migrate.sql
  mysql_db:
    state: dump
    name: all
    target: /tmp/migrate.sql

- name: Copy DB file from datastores to master
  command: scp root@"{{ groups['user_db'][0] }}":/tmp/migrate.sql /tmp/migrate.sql
  delegate_to: "{{ groups['localhost'][0] }}"

- name: Copy DB file from master to mysql_slave
  command: scp /tmp/migrate.sql root@"{{ groups['mysql_slave'][0] }}":/tmp/migrate.sql
  delegate_to: "{{ groups['localhost'][0] }}"
 
- name: Install mysql-5.6 and dependencies
  apt:
    name: "{{ item }}"
    install_recommends: yes
    state: present
  delegate_to: "{{ groups['mysql_slave'][0] }}"
  with_items: 
    - mysql-server-5.6
    - python-mysqldb

- name: Copy configuration template for slave
  vars:
    MYSQL_SERVER_ID: 2
  template:
    src: "mysqld.conf.j2"
    dest: "/etc/mysql/mysql.cnf.d/mysqld.cnf"
    backup: yes
  delegate_to: "{{ groups['mysql_slave'][0] }}"

- name: Start mySQL
  service:
    name: mysql
    state: started
  delegate_to: "{{ groups['mysql_slave'][0] }}"

- name: Ensure Anonymous user(s) does not exist
  mysql_user:
    name: ''
    host: "{{ item }}"
    state: absent
  delegate_to: "{{ groups['mysql_slave'][0] }}"
  with_items:
    - localhost
    - "{{ ansible_hostname }}"

- name: Import migrate.sql
  mysql_db:
    state: import
    name: all
    target: /tmp/migrate.sql
  delegate_to: "{{ groups['mysql_slave'][0] }}"

- name: Get Master Status
  mysql_replication: mode=getmaster
  register: master_status
  delegate_to: "{{ groups['user_db'][0] }}"

- name: Define master in slave
  mysql_replication: mode=changemaster master_host="{{ groups['user_db'][0] }}" master_log_file={{ master_status.File }} master_log_pos={{ master_status.Position }} master_user="{{ MYSQL_SLAVE_USER }}" master_password="{{ MYSQL_SLAVE_PASSWORD }}"
  delegate_to: "{{ groups['mysql_slave'][0] }}"

- name: Start slave
  mysql_replication: mode=startslave
  delegate_to: "{{ groups['mysql_slave'][0] }}"

